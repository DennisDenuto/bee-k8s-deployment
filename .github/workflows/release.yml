name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  createBundle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Carvel Tools
        uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: ytt, kbld, imgpkg
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: generate-bundle
        run: |
          TAG=`echo ${{ github.ref }}  | grep -Eo '[0-9].*'`
          imgpkg push -b "ghcr.io/dennisdenuto/bee-deployment:$TAG" --lock-output ./lock-output.yml -f bundle
          imgpkg copy -b "ghcr.io/dennisdenuto/bee-deployment:$TAG" --to-repo "ghcr.io/dennisdenuto/bee-deployment" --repo-based-tags
      - name: generate-package
        run: |
          bundleSha=$(cat ./lock-output.yml | yq eval '.bundle.image' -)
          TAG=`echo ${{ github.ref }}  | grep -Eo '[0-9].*'`
          ytt -f package.yaml -v packageBundle=$bundleSha -v packageVersion=$TAG | kbld -f- > ./package.yml
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./package.yml
          asset_name: package.yml
          asset_content_type: text/yaml